/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB   &kp Q  &kp W         &kp E            &kp R            &kp T        &kp Y        &kp U             &kp I             &kp O         &kp P     &kp BSPC
&kp ESC   &kp A  &hml LCTRL S  &hml LEFT_ALT D  &hml LEFT_GUI F  &kp G        &kp H        &hmr RIGHT_GUI J  &hmr RIGHT_ALT K  &hmr RCTRL L  &kp SEMI  &kp SQT
&kp RBKT  &kp Z  &kp X         &kp C            &kp V            &kp B        &kp N        &kp M             &kp COMMA         &kp DOT       &kp FSLH  &kp LBKT
                               &mo 1            &kp LSHIFT       &lt 2 RET    &lt 4 SPACE  &mo 3             &none
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp C_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &trans          &trans  &kp N7        &kp N8        &kp N9  &kp FSLH   &kp ASTRK
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3      &bt BT_SEL 4    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp N6  &kp MINUS  &kp PLUS
&trans      &trans        &trans        &trans        &trans            &trans          &trans  &kp N1        &kp N2        &kp N3  &kp EQUAL  &kp KP_ENTER
                                        &to 0         &trans            &trans          &trans  &kp N0        &kp DOT
            >;
        };

        layer_2 {
            bindings = <
&kp N1     &kp N2        &kp N3      &kp N4         &kp N5        &kp N6           &kp N7         &kp N8        &kp N9        &kp N0        &kp EQUAL     &kp BSLH
&kp GRAVE  &kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(UNDER)
&kp F1     &kp F2        &kp F3      &kp F4         &kp F5        &kp F6           &kp F7         &kp F8        &kp F9        &kp F10       &kp F11       &kp F12
                                     &to 0          &trans        &trans           &trans         &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans     &trans     &trans  &trans
                        &to 0   &trans  &trans    &trans    &trans     &trans
            >;
        };

        layer_4 {
            bindings = <
&kp LG(TAB)  &trans  &kp LA(N7)  &kp LA(N8)  &kp LA(N9)  &trans    &kp LC(LA(U))     &kp LC(LA(I))     &kp LC(LA(K))      &kp LC(LA(J))      &trans  &kp K_POWER
&trans       &trans  &kp LA(N4)  &kp LA(N5)  &kp LA(N6)  &trans    &kp LC(LA(LEFT))  &kp LC(LA(DOWN))  &kp LC(LA(UP))     &kp LC(LA(RIGHT))  &trans  &trans
&trans       &trans  &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &trans    &trans            &kp LG(GRAVE)     &kp LC(LA(ENTER))  &trans             &trans  &trans
                                 &to 0       &kp N0      &trans    &trans            &trans            &trans
            >;
        };
    };
};
